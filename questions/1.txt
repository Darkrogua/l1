1. Какой самый эффективный способ конкатенации строк? Используя strings.Builder

2. Что такое интерфейсы, как они применяются в Go?

3. Чем отличаются RWMutex от Mutex?

У RWMutex есть метод RLock(), который дает возможность параллельного чтения ресурса. Это, например, полезно для map.
Так как в него нельзя параллельно писать, но можно паралллельно читать. Lock() блокирует и себя и RLock(), а RLock()
блокирует только Lock().


6. Есть ли в Go перегрузка методов или операторов? Нет, но надо изучить

8. В чем разница make и new?

1) make выделяет память и не инициализирует ее нулевым значением, new выделяет память и инициализирует ее нулевым значением.
2) make возвращает экземпляр самого типа данных, а new указатель на него
3) make можно использовать только для slice, map, chan, а new можно использовать для всего

9. Сколько существует способов задать переменную типа slice или map?
   Для slice 4:
   var varStyle []string
   literalStyle := []string{}
   newStyle := new([]string)
   makeStyle := make([]string, 0)
   makeStyle := make([]string, 5, 10)

   Для map те же 4
   var varStyle map[int]int
   literalStyle = map[string]int{}
   newStyle := new(map[string]int)
   makeStyle := make(map[string]int)




10. Что выведет данная программа и почему? (1) Update не меняет ничего

11. Что выведет данная программа и почему?
   // конкурентный вывод чисел в рандомном порядке от 0 до 4 включительно, и deadlock из-за неверной инициализации
   sync.WaitGroup 

12. Что выведет данная программа и почему?
 // 0 - область видимости

